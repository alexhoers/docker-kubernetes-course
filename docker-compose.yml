   
# 1. Run docker-compose build
# 2. Run docker-compose up
    
version: "3.7"

volumes:
    postgres:
    pgadmin:
 
services:

    server:
      container_name: server-alexhoers
      image: alexhoers/server-alexhoers
      build: 
        context: .
        dockerfile: .docker/server-alexhoers.production.dockerfile
      ports:
      - "3000:3000"
      # Host volumes: these map a path from the host into the container with a bind mount. They have the short syntax /path/on/host:/path/in/container. 
      # See https://docs.docker.com/storage/volumes/ or https://stackoverflow.com/questions/46166304/docker-compose-volumes-without-colon
      volumes: 
        - ./server:/usr/src/app/
      working_dir: /usr/src/app
      networks:
        - alexhoers-network
    
    client:
      container_name: client-alexhoers
      image: alexhoers/client-alexhoers
      build:
        context: .
        dockerfile: .docker/client-alexhoers.production.dockerfile
      # Map nginx port 80 to 4200
      ports:
      - "4200:80"
      volumes:
        - ./client:/usr/src/app/
      working_dir: /usr/src/app
      networks:
        - alexhoers-network
    
    postgres:
      container_name: postgres
      image: "postgres:12"
      environment:
        POSTGRES_USER: postgres # Create as config env. variables
        POSTGRES_PASSWORD: password
        PGDATA: "/data/postgres"
      volumes:
       - postgres:/data/postgres
       - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
      ports:
        - "15432:5432"
      restart: unless-stopped
      networks:
        - alexhoers-network

    pgadmin:
      container_name: demo_pgadmin
      image: "dpage/pgadmin4:4.24"
      environment:
        PGADMIN_DEFAULT_EMAIL: admin
        PGADMIN_DEFAULT_PASSWORD: admin
        PGADMIN_CONFIG_SERVER_MODE: "False"
        PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
      volumes:
        - pgadmin:/var/lib/pgadmin
        - ./docker_pgadmin_servers.json:/pgadmin4/servers.json
      ports:
        - "15433:80"
      entrypoint:
        - "/bin/sh"
        - "-c"
        - "/bin/echo 'postgres:5432:*:postgres:password' > /tmp/pgpassfile && chmod 600 /tmp/pgpassfile && /entrypoint.sh"
      restart: unless-stopped    
      networks:
        - alexhoers-network


networks:
    alexhoers-network:
      driver: bridge